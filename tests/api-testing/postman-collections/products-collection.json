{
  "info": {
    "name": "Products API Testing",
    "description": "Comprehensive test collection for GET /products endpoint with pagination, filtering, and sorting",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Get All Products - Valid Request",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/products",
          "host": ["{{base_url}}"],
          "path": ["products"]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response time is less than 3000ms\", function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(3000);",
              "});",
              "",
              "pm.test(\"Response has required structure\", function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('data');",
              "    pm.expect(jsonData).to.have.property('current_page');",
              "    pm.expect(jsonData).to.have.property('per_page');",
              "    pm.expect(jsonData).to.have.property('total');",
              "    pm.expect(jsonData.data).to.be.an('array');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Get Products - Pagination First Page",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/products?page=1&limit=10",
          "host": ["{{base_url}}"],
          "path": ["products"],
          "query": [
            {
              "key": "page",
              "value": "1"
            },
            {
              "key": "limit",
              "value": "10"
            }
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Pagination metadata exists\", function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('current_page');",
              "    pm.expect(jsonData).to.have.property('per_page');",
              "    pm.expect(jsonData).to.have.property('total');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Get Products - Filter by Category",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/products?category=7",
          "host": ["{{base_url}}"],
          "path": ["products"],
          "query": [
            {
              "key": "category",
              "value": "7"
            }
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Filtered results are returned\", function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.data).to.be.an('array');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Get Products - Search by Name",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/products?search=hammer",
          "host": ["{{base_url}}"],
          "path": ["products"],
          "query": [
            {
              "key": "search",
              "value": "hammer"
            }
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Search results are returned\", function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.data).to.be.an('array');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Get Products - Sort by Price",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/products?sort=price&order=asc",
          "host": ["{{base_url}}"],
          "path": ["products"],
          "query": [
            {
              "key": "sort",
              "value": "price"
            },
            {
              "key": "order",
              "value": "asc"
            }
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Sorted results are returned\", function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.data).to.be.an('array');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Get Products - Performance Test",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/products",
          "host": ["{{base_url}}"],
          "path": ["products"]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Response time is acceptable\", function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(2000);",
              "});",
              "",
              "pm.test(\"Response size is reasonable\", function () {",
              "    const responseSize = pm.response.size().body;",
              "    pm.expect(responseSize).to.be.below(200000); // 200KB limit",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Get Products - Error Handling Test",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/products",
          "host": ["{{base_url}}"],
          "path": ["products"]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"API should not return 500 error\", function () {",
              "    pm.expect(pm.response.code).to.not.equal(500);",
              "});",
              "",
              "pm.test(\"API should not return 404 error\", function () {",
              "    pm.expect(pm.response.code).to.not.equal(404);",
              "});"
            ]
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8091"
    }
  ]
}
